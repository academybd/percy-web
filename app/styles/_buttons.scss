/* stylelint-disable selector-no-qualifying-type, selector-max-specificity  */

.Button,
button,
input[type="submit"],
input[type="reset"],
input[type="button"] {
  --button-height: 38px;
  $button-small-height: 28px;

  display: inline-block;
  position: relative;
  height: var(--button-height);
  padding: 0 15px;
  margin: 0;
  line-height: var(--button-height);
  color: var(--default-link);
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  cursor: pointer;
  background-color: var(--white);
  border: var(--lighter-gray-border);
  border-radius: 4px;

  &:hover,
  &:focus {
    color: var(--default-link-hover);
    text-decoration: none;
    background-color: var(--lightest-gray);
    border: var(--light-gray-border);
    outline: 0;

    &:active {
      background-color: var(--very-light-gray);
    }
  }

  &[disabled] {
    color: var(--dark-gray);
    cursor: default;
    background: var(--lighter-gray);
    border: var(--light-gray);
  }

  &.Button--primary {
    color: var(--white);
    background-color: var(--purple);
    border: 0;

    &:hover,
    &:focus {
      background-color: var(--dark-purple);
    }

    &:active {
      background-color: var(--darker-purple);
    }

    &[disabled] {
      color: var(--gray);
      cursor: default;
      background: none;
      border: var(--lighter-gray-border);
    }
  }

  &.Button--onDark.Button--primary {
    font-size: 1.6rem;
    line-height: 4rem;
    color: var(--white);
    background-color: var(--purple);
    border: 0;

    &:hover {
      color: var(--white);
      background-color: var(--light-purple);
    }

    &:active {
      background-color: var(--purple);
    }
  }

  &.Button--small {
    height: $button-small-height;
    padding: 0 9px;
    font-size: 12px;
    line-height: $button-small-height;
  }

  &.Button--nav {
    width: 100%;
    border: 0;
    border-radius: 0;

    &.Button--active,
    &.active {
      color: var(--default-link-hover);
      background-color: var(--very-light-gray);

      &:hover {
        background: var(--lighter-gray) !important;
      }
    }

    &.Button--nav:hover {
      background-color: var(--lightest-gray);
    }
  }
  // Ugh, we try to avoid these things but this one is kind of necessary because of the default
  // right padding on buttons to allow them to stack horizontally.
  &.u-pull-right {
    margin-right: 0;
    margin-left: 5px;
  }
}

/**
 * Spacing.
 */
button,
.Button {
  &.Button--withLeftIcon {
    padding: 0 15px 0 38px;
  }

  &.Button--withIconOnly {
    padding: 0 20px;
    color: var(--default-text-color);

    .fa {
      font-size: 2rem;
    }
  }

  .fa--left {
    position: absolute;
    top: 7px;
    left: 10px;
    font-size: 2.4rem;
  }
}

.btn {
  display: inline-block;
  height: auto;
  padding: 5px 16px;
  font-size: 12px;
  font-weight: $bold;
  line-height: $line-height;
  text-decoration: none !important;
  white-space: nowrap;
  user-select: none;
  background: var(--white);
  border: 1px solid transparent;
  border-radius: 4px;
  box-shadow: 0 1px 1px rgba(#333, 0.08);
  transition: color 250ms, background 250ms, transform 250ms;

  &:hover {
    color: var(--blue);
    background: lighten($blue, 49%);
    border: 1px solid transparent;
    transform: translate3d(0, -2px, 0);
  }

  &:focus {
    border: 1px solid transparent;
  }

  &:focus:active {
    background: var(--lightest-gray);
  }

  &.is-active {
    color: var(--white);
    background: var(--blue);
  }

  &.btn-square {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 30px;
    padding: 0;
  }
}

.btn-md {
  padding: 10px 32px;
  font-size: 14px;
}

.btn-primary {
  color: var(--white);
  background: var(--purple-gradient);

  &:hover {
    color: var(--white);
    background: var(--purple-gradient);
  }

  &.shadow-on-light {
    box-shadow: 0 2px 8px 0 rgba(46, 0, 62, 0.26), 0 8px 20px 0 rgba(39, 0, 52, 0.08);
  }

  &:focus:active {
    background: var(--purple-gradient);
    transform: translate3d(0, 0, 0);
  }
}

.btn-group {
  display: flex;

  > .btn {
    margin-right: 1px;

    &:hover {
      transform: translate3d(0, 0, 0);
    }
  }

  > .btn:only-child {
    margin-right: 0;
  }

  > .btn:not(:first-child):not(:last-child) {
    border-radius: 0;
  }

  > .btn:first-child:not(:last-child) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  > .btn:last-child:not(:first-child) {
    margin-right: 0;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

.btn-group-alt {
  .btn {
    color: rgba($default-text-color, 0.5);
    background: var(--white);

    &:hover,
    &.is-active {
      color: var(--default-text-color);
      transform: translate3d(0, 0, 0);
    }

    &.is-disabled {
      color: rgba($default-text-color, 0.5);
      opacity: 0.5;
    }

    &.has-diffs {
      color: rgba($red, 0.4);

      &:hover {
        color: var(--red);
      }

      &.is-active {
        color: var(--red);
      }
    }
  }
}

.btn-toolbar {
  display: flex;
}
